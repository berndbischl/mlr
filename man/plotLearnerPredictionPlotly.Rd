% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotLearnerPredictionPlotly.R
\name{plotLearnerPredictionPlotly}
\alias{plotLearnerPredictionPlotly}
\title{Visualizes a learning algorithm on a 3D data set.}
\usage{
plotLearnerPredictionPlotly(learner, task, features = NULL, measures,
  cv = 10L, ..., gridsize, show.point = TRUE, show.point.legend = TRUE,
  show.colorbar = TRUE, pointsize = 2, err.mark = "train",
  err.col = "black", regr.greyscale = FALSE, pretty.names = TRUE,
  point.alpha = 1, show = NULL, bounding.alpha = 0.5,
  bounding.point.size = pointsize, bounding.point.legend = FALSE,
  bounding.region.alphahull = -1, region.alpha = 0.5)
}
\arguments{
\item{learner}{[\code{\link{Learner}} | \code{character(1)}]\cr
The learner.
If you pass a string the learner will be created via \code{\link{makeLearner}}.}

\item{task}{[\code{\link{Task}}]\cr
The task.}

\item{features}{[\code{character}]\cr
Selected features for model.
By default the first 2 features are used.}

\item{measures}{[\code{\link{Measure}} | list of \code{\link{Measure}}]\cr
Performance measure(s) to evaluate.
Default is the default measure for the task, see here \code{\link{getDefaultMeasure}}.}

\item{cv}{[\code{integer(1)}]\cr
Do cross-validation and display in plot title?
Number of folds. 0 means no CV.
Default is 10.}

\item{...}{[any]\cr
Parameters for \code{learner}.}

\item{gridsize}{[\code{integer(1)}]\cr
Grid resolution per axis for background predictions.
Default is 500 for 1D and 100 for 2D.}

\item{show.point}{[\code{logical(1)}]\cr
Show the input data point?
Default is \code{TRUE}}

\item{show.point.legend}{[\code{logical(1)}]\cr
For classification: Show the point legend?
Default is \code{TRUE}}

\item{show.colorbar}{[\code{logical(1)}]\cr
Show the colorbar?
Default is \code{TRUE}}

\item{pointsize}{[\code{numeric(1)}]\cr
Pointsize for ggplot2 \code{\link[ggplot2]{geom_point}} for data points.
Default is 2.}

\item{err.mark}{[\code{character(1)}]:
For classification: Either mark error of the model on the training data (\dQuote{train}) or
during cross-validation (\dQuote{cv}) or not at all with \dQuote{none}.
Default is \dQuote{train}.}

\item{err.col}{[\code{character(1)}]\cr
For classification: Color of misclassified data points.
Default value is \dQuote{black}}

\item{regr.greyscale}{[\code{logical(1)}]\cr
For regression: Should the plot be greyscale completely?
Default is \code{FALSE}.}

\item{pretty.names}{[\code{logical{1}}]\cr
Whether to use the short name of the learner instead of its ID in labels. Defaults to \code{TRUE}.}

\item{point.alpha}{[\code{numeric(1)}]\cr
For classification: Set the transparancy of prediction point for classification 3D plots with value from 0 to 1.
Default is 1.}

\item{show}{[\code{character(1)}]\cr
For classification: Set the separating method. 3 Possiable values: "bounding.point", "bounding.region" and "region".
Default is \code{NULL}}

\item{bounding.alpha}{[\code{numeric(1)}]\cr
For \code{show = "bounding.point"}: Set the transparancy of bounding point.
Default is 0.5.}

\item{bounding.point.size}{[\code{numeric(1)}]\cr
For \code{show = "bounding.point"}: Set the size of bounding point.
Default is \code{pointsize}.}

\item{bounding.point.legend}{[\code{logical(1)}]\cr
For \code{show = "bounding.point"}: Show the legend of bounding point?
Default is \code{FALSE}.}

\item{bounding.region.alphahull}{[\code{integer(1)}]\cr
For \code{show = "bounding.region"}: Set the alpha shapes. See \url{https://plot.ly/python/alpha-shapes/}.
Default is -1.}

\item{region.alpha}{[\code{numeric(1)}]\cr
For \code{show = "region"}: Set the transparancy of the separating region.
Default is 0.5.}
}
\value{
The plotly object.
}
\description{
Trains the model for 2 or 3 selected features, then displays it via \code{\link[plotly]{plotly}}.
Good for teaching or exploring models.

For classification, only 3D plots are supported. The separating area will be displayed 
in three ways "region", "bounding.point" and "bounding.region"

For regression, only 3D plots are supported. 

The plot title displays the model id, its parameters, the training performance
and the cross-validation performance.
}

