language: r
sudo: false
dist: trusty
cache: packages

env:
  global:
    - _R_CHECK_TIMINGS_=0
    - _R_CHECK_FORCE_SUGGESTS_=0  # no error if suggested packs are not avail
    - _R_CHECK_TESTS_NLINES_=999
    - R_MAX_NUM_DLLS=999
    - secure: "d0xff7hriQyReF4y3/iR5sHJlXocKNKcN6/Gi/r9Hxsfuh2Hx3fouQCMSPP+Oba6MDgEvAfryToAxcmaoZByQMwgevB0OBy5xkatj3oTHmhN5Nbk3jNXxXfA6P0Oqxaf7lXVZk2+Ly+PWnbgXn0uhjzdaZo0cWtVJ660ajS0x9Q="
    - WARMUPPKGS='roxygen2 pander mlrMBO purrr mlbench mldr RWeka RWekajars knitr dplyr ggplot2 ranger randomForest kernlab Rfast igraph rjson rmarkdown shiny svglite xgboost xml2'

addons:
  apt:
    packages:
      - libgmp-dev
      - libgsl0-dev
      - ghostscript # for mlr-tutorial pdf
      - imagemagick # for pkgdown favicon

warnings_are_errors: true
r_check_args: "--as-cran --run-donttest"

r_github_packages:
  - berndbischl/BBmisc
  - berndbischl/parallelMap
  - berndbischl/ParamHelpers
  - jimhester/lintr

jobs:
  fast_finish: true
  allow_failures:
    - env: TUTORIAL=HTML
    - env: TUTORIAL=PDF
  include:
    - stage: warmup-1
      install:
        - Rscript -e 'if (length(find.package("devtools", quiet = TRUE)) == 0) install.packages("devtools")'
        - Rscript -e 'devtools::install_deps()'
        - Rscript -e 'pkgs = trimws(strsplit(Sys.getenv("WARMUPPKGS"), " ")[[1]]); pkgs = pkgs[!pkgs %in% installed.packages()]; if (length(pkgs) > 0) install.packages(pkgs)'
      script: true
    - stage: warmup-2
      install:
        - Rscript -e 'devtools::install_deps(upgrade = TRUE, dependencies = TRUE)'
      script: true
    - stage: check
      before_script:
        - java -cp $HOME/R/Library/RWekajars/java/weka.jar weka.core.WekaPackageManager -install-package thirdparty/XMeans1.0.4.zip
        - R --no-save <<< 'library("devtools"); document()'
      script:
        - R CMD build .
        - travis_wait 100 R CMD check mlr*.tar.gz --as-cran --run-donttest
        - grep -q -R "WARNING" "mlr.Rcheck/00check.log" ; [ $? -ne 0 ]
      after_script:
        - ../../travis-tool.sh dump_logs
      after_success:
        - git checkout master
        - "export TRAVIS_COMMIT_MSG=\"$(git log --format=%B --no-merges -n 1)\""
        - R --no-save <<< 'library("devtools"); document()'
        - ./thirdparty/gen_families.sh > man/mlrFamilies.Rd
        - git config user.name $GN
        - git config user.email $GM
        - git config credential.helper "store --file=.git/credentials"
        - bash inst/convert_to_ascii_news.sh
        - echo "https://$GT:@github.com" >> .git/credentials
        - git config push.default matching
        - git add --force NEWS
        - git add --force man/*
        - git commit man DESCRIPTION NAMESPACE NEWS -m "update auto-generated documentation [ci skip]" || true
        - git push
        - "[ $TRAVIS_PULL_REQUEST == \"false\" -a $TRAVIS_BRANCH == \"master\" ] && curl -s -X POST -H \"Content-Type:application/json\" -H \"Accept:application/json\" -H \"Travis-API-Version:3\" -H \"Authorization:token $TT\" -d \"{\\\"request\\\":{\\\"branch\\\":\\\"gh-pages\\\", \\\"message\\\":\\\"commit $TRAVIS_COMMIT $TRAVIS_COMMIT_MSG\\\"}}\" https://api.travis-ci.org/repo/mlr-org%2Fmlr-tutorial/requests"
    - stage: Tutorial
      env: TUTORIAL=HTML
      pandoc_version: 2.1.2
      install:
        - Rscript -e 'if (length(find.package("devtools", quiet = TRUE)) == 0) install.packages("devtools")'
        - Rscript -e 'if (length(find.package("remotes", quiet = TRUE)) == 0) install.packages("remotes")' # needed for tic
        - Rscript -e 'if (length(find.package("magick", quiet = TRUE)) == 0) install.packages("magick")' # favicon creation
        - Rscript -e 'devtools::install_deps(upgrade = TRUE, dependencies = TRUE)'
        - R -q -e 'devtools::install_github("ropenscilabs/tic"); tic::install()'
      after_install: R -q -e 'tic::after_install()'
      before_script: R -q -e 'tic::before_script()'
      script:
        # we need rmarkdown and pander for building the tutorial sites
        - R -q -e 'install.packages(c("rmarkdown", "pander"));tic::prepare_all_stages(); tic::before_install()'
        # for some reason we need to install from github as 'R CMD BUILD' results in build errors of the PDF
        - R -q -e 'devtools::install_github("mlr-org/mlr")'
      before_deploy: R -q -e 'tic::before_deploy(); devtools::install_github("jimhester/lintr");devtools::install_github("pat-s/pkgdown@cc1579abcf00cb11bc856e48f3b9d3c91432c2c2")'
      deploy:
         provider: script
         script: R -q -e 'tic::deploy()'
         on:
           branch: master
           condition: $TRAVIS_PULL_REQUEST = false
      after_success: R -q -e 'tic::after_deploy()'
      after_script: R -q -e 'tic::after_script()'
    - stage: Tutorial
      env: TUTORIAL=PDF
      pandoc_version: 2.1.2
      install:
        - R -q -e 'install.packages(c("bookdown", "pander"))'
      script:
        - Rscript -e 'if (length(find.package("devtools", quiet = TRUE)) == 0) install.packages("devtools")'
        - Rscript -e 'devtools::install_deps(upgrade = TRUE, dependencies = TRUE)'
        # for some reason we need to install from github as 'R CMD BUILD' results in build errors of the PDF
        - R -q -e 'devtools::install_github("mlr-org/mlr")'
        - R -q -e 'rmarkdown::render("vignettes/tutorial/devel/pdf/_pdf_wrapper.Rmd")' # build pdf version
      after_success:
        - git checkout master
        - git config user.name $GN
        - git config user.email $GM
        - git config credential.helper "store --file=.git/credentials"
        - echo "https://$GT:@github.com" >> .git/credentials
        - git config push.default matching
        - mv vignettes/tutorial/devel/pdf/_pdf_wrapper.pdf vignettes/tutorial/devel/pdf/mlr-tutorial.pdf
        - git add --force vignettes/tutorial/devel/pdf/mlr-tutorial.pdf
        - git commit -a -m "update auto-generated tutorial pdf version [ci skip]"
        - git push --force

notifications:
  email:
    recipients:
      - bernd_bischl@gmx.net
      - schiffner@math.uni-duesseldorf.de
      - erich.studerus@gmail.com
  slack: mlr-org:DYNA3KIwcG9F4sQoeyTnPBhF#buildnotifications
on_success: change
on_failure: always
