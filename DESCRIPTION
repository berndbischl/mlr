Package: mlr
Title: Machine Learning in R
Description: Interface to a large number of classification and regression
    techniques, including machine-readable parameter descriptions. There is
    also an experimental extension for survival analysis, clustering and
    general, example-specific cost-sensitive learning. Generic resampling,
    including cross-validation, bootstrapping and subsampling. Hyperparameter
    tuning with modern optimization techniques, for single- and multi-objective
    problems. Filter and wrapper methods for feature selection. Extension of
    basic learners with additional operations common in machine learning, also
    allowing for easy nested resampling. Most operations can be parallelized.
Authors@R: c(
    person("Bernd", "Bischl", email = "bernd_bischl@gmx.net", role = c("aut", "cre")),
    person("Michel", "Lang", email = "michellang@gmail.com", role = "aut"),
    person("Lars", "Kotthoff", email = "larsko@cs.ubc.ca", role = "aut"),
    person("Julia", "Schiffner", email = "schiffner@math.uni-duesseldorf.de", role = "aut"),
    person("Jakob", "Richter", email = "code@jakob-r.de", role = "aut"),
    person("Zachary", "Jones", email = "zmj@zmjones.com", role = "aut"),
    person("Giuseppe", "Casalicchio", email = "giuseppe.casalicchio@stat.uni-muenchen.de", role = "aut"),
    person("Jakob", "Bossek", email = "jakob.bossek@tu-dortmund.de", role = "ctb"),
    person("Erich", "Studerus", email = "erich.studerus@upkbs.ch", role = "ctb"),
    person("Leonard","Judt", email = "leonard.judt@tu-dortmund.de", role = "ctb"),
    person("Tobias", "Kuehn", email = "tobi.kuehn@gmx.de", role = "ctb"),
    person("Pascal", "Kerschke", email = "kerschke@uni-muenster.de", role = "ctb"),
    person("Florian", "Fendt", email = "flo_fendt@gmx.de", role = "ctb"))
URL: https://github.com/mlr-org/mlr
BugReports: https://github.com/mlr-org/mlr/issues
License: BSD_2_clause + file LICENSE
Encoding: UTF-8
Roxygen: list(wrap = FALSE)
Depends:
    R (>= 3.0.2),
    BBmisc (>= 1.10),
    ggplot2,
    ParamHelpers (>= 1.8),
    stats,
    stringi
Imports:
    checkmate (>= 1.8.1),
    data.table,
    ggvis,
    methods,
    parallelMap (>= 1.3),
    plyr,
    reshape2,
    shiny,
    survival,
    utils
Suggests:
    ada,
    adabag,
    bartMachine,
    brnn,
    bst,
    C50,
    care,
    caret (>= 6.0-57),
    class,
    clue,
    cluster,
    clusterSim,
    clValid,
    cmaes,
    CoxBoost,
    crs,
    Cubist,
    deepnet,
    DiceKriging,
    DiceOptim,
    DiscriMiner,
    e1071,
    earth,
    elasticnet,
    elmNN,
    emoa,
    extraTrees,
    flare,
    fields,
    FNN,
    fpc,
    frbs,
    FSelector,
    gbm,
    GenSA,
    glmnet,
    h2o (>= 3.6.0.8),
    GPfit,
    Hmisc,
    irace (>= 1.0.7),
    kernlab,
    kknn,
    klaR,
    knitr,
    kohonen,
    laGP,
    LiblineaR,
    lqa,
    MASS,
    mboost,
    mco,
    mda,
    mlbench,
    modeltools,
    mRMRe,
    nnet,
    nodeHarvest (>= 0.7-3),
    neuralnet,
    numDeriv,
    pamr,
    party,
    penalized (>= 0.9-47),
    pls,
    PMCMR (>= 4.1),
    pROC (>= 1.8),
    randomForest,
    randomForestSRC (>= 2.2.0),
    ranger (>= 0.5.0),
    RCurl,
    rFerns,
    rjson,
    rknn,
    rmarkdown,
    robustbase,
    ROCR,
    rotationForest,
    rpart,
    RRF,
    rrlda,
    rsm,
    RSNNS,
    RWeka,
    sda,
    smoof,
    sparsediscrim,
    sparseLDA,
    stepPlr,
    SwarmSVM,
    svglite,
    testthat,
    tgp,
    TH.data,
    xgboost,
    XML
LazyData: yes
ByteCompile: yes
Version: 2.10
VignetteBuilder: knitr
RoxygenNote: 5.0.1
Collate:
    'Aggregation.R'
    'BaggingWrapper.R'
    'BaseEnsemble.R'
    'BaseEnsemble_operators.R'
    'BaseWrapper.R'
    'BaseWrapper_operators.R'
    'BenchmarkResultOrderLevels.R'
    'BenchmarkResult_operators.R'
    'ChainModel.R'
    'ChainModel_operators.R'
    'ClassifTask.R'
    'ClusterTask.R'
    'ConstantClassWrapper.R'
    'CostSensClassifWrapper.R'
    'CostSensRegrWrapper.R'
    'CostSensTask.R'
    'CostSensWeightedPairsWrapper.R'
    'DownsampleWrapper.R'
    'FailureModel.R'
    'FeatSelControl.R'
    'FeatSelControlExhaustive.R'
    'FeatSelControlGA.R'
    'FeatSelControlRandom.R'
    'FeatSelControlSequential.R'
    'FeatSelResult.R'
    'FeatSelWrapper.R'
    'Filter.R'
    'FilterWrapper.R'
    'HoldoutInstance_make_fixed.R'
    'HomogeneousEnsemble.R'
    'Impute.R'
    'ImputeMethods.R'
    'ImputeWrapper.R'
    'Learner.R'
    'Learner_properties.R'
    'Measure.R'
    'Measure_colAUC.R'
    'Measure_custom_resampled.R'
    'Measure_make_cost.R'
    'ModelMultiplexer.R'
    'ModelMultiplexerParamSet.R'
    'MulticlassWrapper.R'
    'MultilabelBinaryRelevanceWrapper.R'
    'MultilabelClassifierChainsWrapper.R'
    'MultilabelDBRWrapper.R'
    'MultilabelNestedStackingWrapper.R'
    'MultilabelStackingWrapper.R'
    'MultilabelTask.R'
    'NoFeaturesModel.R'
    'OptControl.R'
    'OptResult.R'
    'OptWrapper.R'
    'OverBaggingWrapper.R'
    'OverUnderSampling.R'
    'OverUndersampleWrapper.R'
    'Prediction.R'
    'Prediction_operators.R'
    'PreprocWrapper.R'
    'PreprocWrapperCaret.R'
    'RLearner.R'
    'RLearner_classif_C50.R'
    'RLearner_classif_IBk.R'
    'RLearner_classif_J48.R'
    'RLearner_classif_JRip.R'
    'RLearner_classif_LiblineaRL1L2SVC.R'
    'RLearner_classif_LiblineaRL1LogReg.R'
    'RLearner_classif_LiblineaRL2L1SVC.R'
    'RLearner_classif_LiblineaRL2LogReg.R'
    'RLearner_classif_LiblineaRL2SVC.R'
    'RLearner_classif_LiblineaRMultiClassSVC.R'
    'RLearner_classif_OneR.R'
    'RLearner_classif_PART.R'
    'RLearner_classif_RRF.R'
    'RLearner_classif_ada.R'
    'RLearner_classif_avNNet.R'
    'RLearner_classif_bartMachine.R'
    'RLearner_classif_bdk.R'
    'RLearner_classif_binomial.R'
    'RLearner_classif_blackboost.R'
    'RLearner_classif_boosting.R'
    'RLearner_classif_bst.R'
    'RLearner_classif_cforest.R'
    'RLearner_classif_clusterSVM.R'
    'RLearner_classif_ctree.R'
    'RLearner_classif_cvglmnet.R'
    'RLearner_classif_dbnDNN.R'
    'RLearner_classif_dcSVM.R'
    'RLearner_classif_extraTrees.R'
    'RLearner_classif_fnn.R'
    'RLearner_classif_gaterSVM.R'
    'RLearner_classif_gausspr.R'
    'RLearner_classif_gbm.R'
    'RLearner_classif_geoDA.R'
    'RLearner_classif_glmboost.R'
    'RLearner_classif_glmnet.R'
    'RLearner_classif_h2odeeplearning.R'
    'RLearner_classif_h2ogbm.R'
    'RLearner_classif_h2oglm.R'
    'RLearner_classif_h2orandomForest.R'
    'RLearner_classif_hdrda.R'
    'RLearner_classif_kknn.R'
    'RLearner_classif_knn.R'
    'RLearner_classif_ksvm.R'
    'RLearner_classif_lda.R'
    'RLearner_classif_linDA.R'
    'RLearner_classif_logreg.R'
    'RLearner_classif_lqa.R'
    'RLearner_classif_lssvm.R'
    'RLearner_classif_lvq1.R'
    'RLearner_classif_mda.R'
    'RLearner_classif_mlp.R'
    'RLearner_classif_multinom.R'
    'RLearner_classif_naiveBayes.R'
    'RLearner_classif_neuralnet.R'
    'RLearner_classif_nnTrain.R'
    'RLearner_classif_nnet.R'
    'RLearner_classif_nodeHarvest.R'
    'RLearner_classif_pamr.R'
    'RLearner_classif_penalized_fusedlasso.R'
    'RLearner_classif_penalized_lasso.R'
    'RLearner_classif_penalized_ridge.R'
    'RLearner_classif_plr.R'
    'RLearner_classif_plsdaCaret.R'
    'RLearner_classif_probit.R'
    'RLearner_classif_qda.R'
    'RLearner_classif_quaDA.R'
    'RLearner_classif_rFerns.R'
    'RLearner_classif_randomForest.R'
    'RLearner_classif_randomForestSRC.R'
    'RLearner_classif_randomForestSRCSyn.R'
    'RLearner_classif_ranger.R'
    'RLearner_classif_rda.R'
    'RLearner_classif_rknn.R'
    'RLearner_classif_rotationForest.R'
    'RLearner_classif_rpart.R'
    'RLearner_classif_rrlda.R'
    'RLearner_classif_saeDNN.R'
    'RLearner_classif_sda.R'
    'RLearner_classif_sparseLDA.R'
    'RLearner_classif_svm.R'
    'RLearner_classif_xgboost.R'
    'RLearner_classif_xyf.R'
    'RLearner_cluster_Cobweb.R'
    'RLearner_cluster_EM.R'
    'RLearner_cluster_FarthestFirst.R'
    'RLearner_cluster_SimpleKMeans.R'
    'RLearner_cluster_XMeans.R'
    'RLearner_cluster_cmeans.R'
    'RLearner_cluster_dbscan.R'
    'RLearner_cluster_kkmeans.R'
    'RLearner_cluster_kmeans.R'
    'RLearner_multilabel_cforest.R'
    'RLearner_multilabel_rFerns.R'
    'RLearner_multilabel_randomForestSRC.R'
    'RLearner_regr_GPfit.R'
    'RLearner_regr_IBk.R'
    'RLearner_regr_LiblineaRL2L1SVR.R'
    'RLearner_regr_LiblineaRL2L2SVR.R'
    'RLearner_regr_RRF.R'
    'RLearner_regr_avNNet.R'
    'RLearner_regr_bcart.R'
    'RLearner_regr_bdk.R'
    'RLearner_regr_bgp.R'
    'RLearner_regr_bgpllm.R'
    'RLearner_regr_blackBoost.R'
    'RLearner_regr_blm.R'
    'RLearner_regr_brnn.R'
    'RLearner_regr_bst.R'
    'RLearner_regr_btgp.R'
    'RLearner_regr_btgpllm.R'
    'RLearner_regr_btlm.R'
    'RLearner_regr_cforest.R'
    'RLearner_regr_crs.R'
    'RLearner_regr_ctree.R'
    'RLearner_regr_cubist.R'
    'RLearner_regr_earth.R'
    'RLearner_regr_elmNN.R'
    'RLearner_regr_extraTrees.R'
    'RLearner_regr_fnn.R'
    'RLearner_regr_frbs.R'
    'RLearner_regr_gausspr.R'
    'RLearner_regr_gbm.R'
    'RLearner_regr_glm.R'
    'RLearner_regr_glmboost.R'
    'RLearner_regr_glmnet.R'
    'RLearner_regr_h2odeeplearning.R'
    'RLearner_regr_h2ogbm.R'
    'RLearner_regr_h2oglm.R'
    'RLearner_regr_h2orandomForest.R'
    'RLearner_regr_kknn.R'
    'RLearner_regr_km.R'
    'RLearner_regr_ksvm.R'
    'RLearner_regr_laGP.R'
    'RLearner_regr_lm.R'
    'RLearner_regr_mars.R'
    'RLearner_regr_mob.R'
    'RLearner_regr_nnet.R'
    'RLearner_regr_nodeHarvest.R'
    'RLearner_regr_pcr.R'
    'RLearner_regr_penalized_fusedlasso.R'
    'RLearner_regr_penalized_lasso.R'
    'RLearner_regr_penalized_ridge.R'
    'RLearner_regr_plsr.R'
    'RLearner_regr_randomForest.R'
    'RLearner_regr_randomForestSRC.R'
    'RLearner_regr_randomForestSRCSyn.R'
    'RLearner_regr_ranger.R'
    'RLearner_regr_rknn.R'
    'RLearner_regr_rpart.R'
    'RLearner_regr_rsm.R'
    'RLearner_regr_rvm.R'
    'RLearner_regr_slim.R'
    'RLearner_regr_svm.R'
    'RLearner_regr_xgboost.R'
    'RLearner_regr_xyf.R'
    'RLearner_surv_CoxBoost.R'
    'RLearner_surv_cforest.R'
    'RLearner_surv_coxph.R'
    'RLearner_surv_cv.CoxBoost.R'
    'RLearner_surv_cvglmnet.R'
    'RLearner_surv_glmboost.R'
    'RLearner_surv_glmnet.R'
    'RLearner_surv_penalized_fusedlasso.R'
    'RLearner_surv_penalized_lasso.R'
    'RLearner_surv_penalized_ridge.R'
    'RLearner_surv_randomForestSRC.R'
    'RLearner_surv_ranger.R'
    'RLearner_surv_rpart.R'
    'RegrTask.R'
    'ResampleDesc.R'
    'ResampleInstance.R'
    'ResampleInstances.R'
    'ResamplePrediction.R'
    'ResampleResult.R'
    'ResampleResult_operators.R'
    'SMOTEWrapper.R'
    'StackedLearner.R'
    'SupervisedTask.R'
    'SurvTask.R'
    'Task.R'
    'TaskDesc.R'
    'Task_operators.R'
    'TuneControl.R'
    'TuneControlCMAES.R'
    'TuneControlDesign.R'
    'TuneControlGenSA.R'
    'TuneControlGrid.R'
    'TuneControlIrace.R'
    'TuneControlMBO.R'
    'TuneControlRandom.R'
    'TuneMultiCritControl.R'
    'TuneMultiCritControlGrid.R'
    'TuneMultiCritControlNSGA2.R'
    'TuneMultiCritControlRandom.R'
    'TuneMultiCritResult.R'
    'TuneResult.R'
    'TuneWrapper.R'
    'UnsupervisedTask.R'
    'WeightedClassesWrapper.R'
    'WrappedModel.R'
    'aggregations.R'
    'analyzeFeatSelResult.R'
    'asROCRPrediction.R'
    'aucc.R'
    'benchmark.R'
    'benchmarkResult_mergers.R'
    'capLargeValues.R'
    'checkBMRMeasure.R'
    'checkLearner.R'
    'checkLearnerBeforeTrain.R'
    'checkMeasures.R'
    'checkPrediction.R'
    'checkTargetPreproc.R'
    'checkTask.R'
    'checkTunerParset.R'
    'configureMlr.R'
    'convertBMRToRankMatrix.R'
    'convertMLBenchObjToTask.R'
    'convertX.R'
    'createDummyFeatures.R'
    'crossover.R'
    'datasets.R'
    'downsample.R'
    'dropFeatures.R'
    'estimateResidualVariance.R'
    'evalOptimizationState.R'
    'filterFeatures.R'
    'fixDataForLearner.R'
    'friedmanPostHocTestBMR.R'
    'friedmanTestBMR.R'
    'generateCalibration.R'
    'generateFilterValues.R'
    'generateHyperParsEffect.R'
    'generateLearningCurve.R'
    'generatePartialDependence.R'
    'generateThreshVsPerf.R'
    'getCaretParamSet.R'
    'getClassWeightParam.R'
    'getConfMatrix.R'
    'getFeatSelResult.R'
    'getHyperPars.R'
    'getMultilabelBinaryPerformances.R'
    'getNestedTuneResults.R'
    'getParamSet.R'
    'getResampleExtract.R'
    'getTaskConstructorForLearner.R'
    'getTuneResult.R'
    'helpers.R'
    'isFailureModel.R'
    'joinClassLevels.R'
    'learnerArgsToControl.R'
    'learners.R'
    'listLearners.R'
    'listMeasures.R'
    'logFunOpt.R'
    'makeLearner.R'
    'makeRemoveConstantFeaturesWrapper.R'
    'measures.R'
    'mergeSmallFactorLevels.R'
    'mutateBits.R'
    'normalizeFeatures.R'
    'options.R'
    'performance.R'
    'plotBMRBoxplots.R'
    'plotBMRRanksAsBarChart.R'
    'plotBMRSummary.R'
    'plotCritDifferences.R'
    'plotLearnerPrediction.R'
    'plotTuneMultiCritResult.R'
    'plotViperCharts.R'
    'predict.R'
    'predictLearner.R'
    'relativeOverfitting.R'
    'removeConstantFeatures.R'
    'removeHyperPars.R'
    'resample.R'
    'resample_convenience.R'
    'selectFeatures.R'
    'selectFeaturesExhaustive.R'
    'selectFeaturesGA.R'
    'selectFeaturesRandom.R'
    'selectFeaturesSequential.R'
    'setHyperPars.R'
    'setId.R'
    'setPredictThreshold.R'
    'setPredictType.R'
    'setThreshold.R'
    'smote.R'
    'summarizeColumns.R'
    'summarizeLevels.R'
    'train.R'
    'trainLearner.R'
    'tuneCMAES.R'
    'tuneDesign.R'
    'tuneGenSA.R'
    'tuneGrid.R'
    'tuneIrace.R'
    'tuneMBO.R'
    'tuneMultiCritGrid.R'
    'tuneMultiCritNSGA2.R'
    'tuneMultiCritRandom.R'
    'tuneParams.R'
    'tuneParamsMultiCrit.R'
    'tuneRandom.R'
    'tuneThreshold.R'
    'tunerFitnFun.R'
    'utils.R'
    'utils_imbalancy.R'
    'utils_opt.R'
    'zzz.R'
